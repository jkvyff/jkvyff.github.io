{"version":3,"sources":["Formatting/Icon.tsx","Formatting/buttons.tsx","Formatting/elements.tsx","SyncedEditor.tsx","slateInitialValue.ts","Sidebar.tsx","GroupsEditor.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Icon","className","fill","icon","viewBox","height","width","d","defaultProps","undefined","LIST_TYPES","isMarkActive","format","editor","marks","Editor","isBlockActive","nodes","match","n","type","MarkButton","onMouseDown","event","preventDefault","mark","removeMark","addMark","toggleMark","BlockButton","isActive","isList","includes","Transforms","unwrapNodes","split","setNodes","block","children","wrapNodes","toggleBlock","Element","attributes","element","Leaf","leaf","bold","code","italic","underline","socket","io","process","console","log","SyncedEditor","value","setValue","groupId","handleTime","useMemo","withHistory","withReact","createEditor","remote","useRef","id","Date","now","socketchange","renderElement","useCallback","props","renderLeaf","useEffect","fetch","then","res","json","JSON","parse","body","timestamp","toString","catch","err","error","eventName","on","editorId","ops","current","withoutNormalizing","forEach","op","apply","off","updateOperations","options","operations","filter","o","map","data","source","length","emit","onChange","placeholder","initialValue","text","Sidebar","updatedTime","useState","window","innerWidth","setWidth","handleResize","addEventListener","removeEventListener","saveDoc","method","headers","Accept","stringify","onClick","toLocaleDateString","year","month","day","toLocaleTimeString","hour","minute","second","timeZoneName","GroupsEditor","params","setUpdatedTime","App","path","exact","render","to","component","Boolean","location","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8ba1dbd2.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nfunction Icon({ className, fill }: { className: string; fill: string }) {\n  let icon = \"\";\n  switch (className) {\n    case \"bold\":\n      icon =\n        \"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\";\n      break;\n    case \"code\":\n      icon =\n        \"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\";\n      break;\n    case \"italic\":\n      icon = \"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\";\n      break;\n    case \"underline\":\n      icon =\n        \"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\";\n      break;\n    case \"block-quote\":\n      icon = \"M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z\";\n      break;\n    case \"numbered-list\":\n      icon =\n        \"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\";\n      break;\n    case \"bulleted-list\":\n      icon =\n        \"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\";\n      break;\n  }\n  return (\n    <svg viewBox=\"0 -6 24 24\" height=\"20\" width=\"20\" className={className}>\n      <path fill={fill} d={icon} />\n    </svg>\n  );\n}\n\nIcon.propTypes = {\n  className: PropTypes.string,\n  fill: PropTypes.string\n};\n\nIcon.defaultProps = {\n  className: undefined,\n  fill: \"#fff\"\n};\n\nexport default Icon;\n","import React from \"react\";\nimport { Editor, Transforms } from \"slate\";\nimport Icon from \"./Icon\";\n\nconst LIST_TYPES = [\"numbered-list\", \"bulleted-list\"];\n\nconst isMarkActive = (format: string, editor: any) => {\n  const marks = Editor.marks(editor);\n  return marks ? marks[format] === true : false;\n};\n\nconst isBlockActive = (editor: any, format: string) => {\n  const [match] = Editor.nodes(editor, {\n    match: n => n.type === format\n  });\n  return !!match;\n};\n\nconst toggleMark = (mark: string, editor: any) => {\n  const isActive = isMarkActive(mark, editor);\n\n  if (isActive) {\n    Editor.removeMark(editor, mark);\n  } else {\n    Editor.addMark(editor, mark, true);\n  }\n};\n\nconst toggleBlock = (format: string, editor: any) => {\n  const isActive = isBlockActive(editor, format);\n  const isList = LIST_TYPES.includes(format);\n\n  Transforms.unwrapNodes(editor, {\n    match: n => LIST_TYPES.includes(n.type),\n    split: true\n  });\n\n  Transforms.setNodes(editor, {\n    type: isActive ? \"paragraph\" : isList ? \"list-item\" : format\n  });\n\n  if (!isActive && isList) {\n    const block = { type: format, children: [] };\n    Transforms.wrapNodes(editor, block);\n  }\n};\n\nexport const MarkButton = ({\n  format,\n  editor\n}: {\n  format: string;\n  editor: any;\n}) => {\n  return (\n    <>\n      <span\n        className={isMarkActive(format, editor) ? \"btn active\" : \"btn\"}\n        onMouseDown={event => {\n          event.preventDefault();\n          toggleMark(format, editor);\n        }}\n      >\n        <Icon className={format} />\n      </span>\n    </>\n  );\n};\n\nexport const BlockButton = ({\n  format,\n  editor\n}: {\n  format: string;\n  editor: any;\n}) => {\n  return (\n    <>\n      <span\n        className={isBlockActive(format, editor) ? \"btn active\" : \"btn\"}\n        onMouseDown={event => {\n          event.preventDefault();\n          toggleBlock(format, editor);\n        }}\n      >\n        <Icon className={format} />\n      </span>\n    </>\n  );\n};\n","import React from \"react\";\n\nexport const Element = ({ attributes, children, element }: any) => {\n  switch (element.type) {\n    case \"block-quote\":\n      return <blockquote {...attributes}>{children}</blockquote>;\n    case \"bulleted-list\":\n      return <ul {...attributes}>{children}</ul>;\n    case \"heading-one\":\n      return <h1 {...attributes}>{children}</h1>;\n    case \"heading-two\":\n      return <h2 {...attributes}>{children}</h2>;\n    case \"list-item\":\n      return <li {...attributes}>{children}</li>;\n    case \"numbered-list\":\n      return <ol {...attributes}>{children}</ol>;\n    default:\n      return <p {...attributes}>{children}</p>;\n  }\n};\n\nexport const Leaf = ({ attributes, children, leaf }: any) => {\n  if (leaf.bold) {\n    children = <strong>{children}</strong>;\n  }\n\n  if (leaf.code) {\n    children = <code>{children}</code>;\n  }\n\n  if (leaf.italic) {\n    children = <em>{children}</em>;\n  }\n\n  if (leaf.underline) {\n    children = <u>{children}</u>;\n  }\n  return <span {...attributes}>{children}</span>;\n};\n","import React, { useMemo, useEffect, useRef, useCallback } from \"react\";\nimport { Editor, createEditor, Operation } from \"slate\";\nimport { Slate, Editable, withReact } from \"slate-react\";\nimport { withHistory } from \"slate-history\";\nimport io from \"socket.io-client\";\nimport { Leaf, Element, MarkButton, BlockButton } from \"./Formatting\";\n\nconst socket = io(`${process.env.REACT_APP_DOCS_API}`);\n\nconsole.log(process.env.REACT_APP_DOCS_API);\ninterface Props {\n  value: any;\n  setValue: any;\n  groupId: string;\n  handleTime: any;\n}\n\nexport const SyncedEditor: React.FC<Props> = ({\n  value,\n  setValue,\n  groupId,\n  handleTime\n}) => {\n  const editor = useMemo(() => withHistory(withReact(createEditor())), []);\n  const remote = useRef(false);\n  const id = useRef(`${Date.now()}`);\n  const socketchange = useRef(false);\n  const renderElement = useCallback(props => <Element {...props} />, []);\n  const renderLeaf = useCallback(props => <Leaf {...props} />, []);\n\n  useEffect(() => {\n    fetch(`${process.env.REACT_APP_DOCS_API}docs/${groupId}`)\n      .then(res => res.json())\n      .then(json => {\n        setValue(JSON.parse(json[0].body));\n        handleTime(json[0].timestamp.toString());\n      })\n      .catch(err => {\n        console.error(\"Error:\", err);\n      });\n\n    const eventName = `new-remote-operations-${groupId}`;\n    socket.on(\n      eventName,\n      ({ editorId, ops }: { editorId: string; ops: Operation[] }) => {\n        if (id.current !== editorId) {\n          remote.current = true;\n          Editor.withoutNormalizing(editor, () => {\n            ops.forEach((op: Operation) => {\n              editor.apply(op);\n            });\n          });\n          remote.current = false;\n          socketchange.current = true;\n          console.log(\"changed elsewhere\");\n        }\n      }\n    );\n\n    return () => {\n      socket.off(eventName);\n    };\n  }, [editor, groupId, handleTime, setValue]);\n\n  const updateOperations = useCallback(\n    (options: any) => {\n      setValue(options);\n      const ops = editor.operations\n        .filter(o => {\n          if (o) {\n            return o.type !== \"set_selection\";\n          }\n          return false;\n        })\n        .map((o: any) => ({ ...o, data: { source: id.current } }));\n      if (ops && ops.length && !remote.current && !socketchange.current) {\n        socket.emit(\"new-operations\", { editorId: id.current, ops, groupId });\n      }\n      socketchange.current = false;\n    },\n    [editor.operations, groupId, setValue]\n  );\n\n  return (\n    <>\n      <div className=\"editor\">\n        <div>\n          <MarkButton format=\"bold\" editor={editor} />\n          <MarkButton format=\"italic\" editor={editor} />\n          <MarkButton format=\"underline\" editor={editor} />\n          <MarkButton format=\"code\" editor={editor} />\n          <BlockButton format=\"block-quote\" editor={editor} />\n          <BlockButton format=\"numbered-list\" editor={editor} />\n          <BlockButton format=\"bulleted-list\" editor={editor} />\n        </div>\n        <hr />\n        <Slate editor={editor} value={value} onChange={updateOperations}>\n          <Editable\n            renderElement={renderElement}\n            renderLeaf={renderLeaf}\n            placeholder=\"Edit the text for all to see.\"\n          />\n        </Slate>\n      </div>\n    </>\n  );\n};\n","export const initialValue = [\n  { type: \"paragraph\", children: [{ text: \"\" }] }\n] as any;\n","import React, { useState, useEffect, useCallback } from \"react\";\n\ninterface Props {\n  groupId: string;\n  value: any;\n  updatedTime: string;\n  handleTime: any;\n}\n\nexport const Sidebar: React.FC<Props> = ({\n  groupId,\n  value,\n  updatedTime,\n  handleTime\n}) => {\n  const [width, setWidth] = useState(window.innerWidth);\n  const dayOptions: Intl.DateTimeFormatOptions = {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"numeric\"\n  };\n  const timeOptions: Intl.DateTimeFormatOptions = {\n    hour: \"numeric\",\n    minute: \"numeric\",\n    second: \"numeric\",\n    timeZoneName: \"short\"\n  };\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWidth(window.innerWidth);\n    };\n    window.addEventListener(\"resize\", handleResize);\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const saveDoc = useCallback(() => {\n    console.log(value);\n    fetch(`${process.env.REACT_APP_DOCS_API}docs/${groupId}`, {\n      method: \"PUT\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({ body: value })\n    })\n      .then(res => res.json())\n      .then(json => handleTime(json.timestamp));\n  }, [value, groupId, handleTime]);\n\n  return width >= 1400 ? (\n    <div className=\"sidebar\">\n      <h2>Shared Docs</h2>\n      <p>Edit to see updates in realtime. Save when you want to share.</p>\n      <button className=\"btn save-btn\" onClick={saveDoc}>\n        Save\n      </button>\n      <div className=\"time\">\n        <p className=\"left\">Last Saved</p>\n        <p>{new Date(updatedTime).toLocaleDateString(\"en-US\", dayOptions)}</p>\n        <p>{new Date(updatedTime).toLocaleTimeString(\"en-US\", timeOptions)}</p>\n      </div>\n      <p className=\"last\">\n        Create a new page by typing whatever you want after 'docs/' in the\n        address bar.\n      </p>\n    </div>\n  ) : (\n    <div className=\"sidebar\">\n      <p className=\"title\">Shared Docs</p>\n      <button className=\"btn save-btn-mobile\" onClick={saveDoc}>\n        Save\n      </button>\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { SyncedEditor } from \"./SyncedEditor\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { initialValue } from \"./slateInitialValue\";\nimport { Sidebar } from \"./Sidebar\";\n\nexport const GroupsEditor: React.FC<RouteComponentProps<{ id: string }>> = ({\n  match: {\n    params: { id }\n  }\n}) => {\n  const [updatedTime, setUpdatedTime] = useState(`${new Date()}`);\n  const [value, setValue] = useState(initialValue);\n\n  return (\n    <>\n      <Sidebar\n        value={value}\n        updatedTime={updatedTime}\n        handleTime={setUpdatedTime}\n        groupId={id}\n      />\n      <SyncedEditor\n        value={value}\n        setValue={setValue}\n        groupId={id}\n        handleTime={setUpdatedTime}\n      />\n    </>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Route, Redirect } from \"react-router-dom\";\nimport { GroupsEditor } from \"./GroupsEditor\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <BrowserRouter>\n        <Route\n          path=\"/docs\"\n          exact\n          render={() => {\n            return <Redirect to={`/docs/${Date.now()}`} />;\n          }}\n        />\n        <Route path=\"/docs/:id\" exact component={GroupsEditor} />\n      </BrowserRouter>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}